{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst {\n  spawn\n} = require('child_process');\nconst path = require('path');\nconst axios = require('axios');\nrequire('dotenv').config();\nconst app = express();\nconst PORT = process.env.PORT || 3001;\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY;\nconst FLASK_SERVER_URL = 'http://127.0.0.1:5000/recommend-music';\nif (!OPENAI_API_KEY) {\n  console.error('OpenAI API key is not set in environment variables.');\n  process.exit(1);\n}\n\n// Configure multer for file uploads\nconst storage = multer.memoryStorage();\nconst upload = multer({\n  storage: storage\n});\napp.use(express.json());\napp.post('/api/upload', upload.single('video'), async (req, res) => {\n  if (!req.file) {\n    console.log('No file uploaded.');\n    return res.status(400).send('No file uploaded.');\n  }\n  try {\n    console.log('File received:', req.file);\n\n    // Call the Python script and pass the file buffer\n    const scriptPath = path.join(__dirname, 'analyze.py');\n    const pythonProcess = spawn('python3', [scriptPath]);\n\n    // Send the file buffer to the Python script\n    pythonProcess.stdin.write(req.file.buffer);\n    pythonProcess.stdin.end();\n    let output = '';\n    pythonProcess.stdout.on('data', data => {\n      output += data.toString();\n    });\n    pythonProcess.stderr.on('data', data => {\n      console.error(`Error from Python script: ${data.toString()}`);\n    });\n    pythonProcess.on('close', async code => {\n      if (code !== 0) {\n        console.error('Python script exited with code:', code);\n        return res.status(500).json({\n          message: 'Failed to analyze video'\n        });\n      }\n      console.log('Python script output:', output);\n      try {\n        const response = await axios.post(FLASK_SERVER_URL, {\n          hashtags: output\n        });\n        console.log('Response from Flask server:', response.data);\n        res.json(response.data);\n      } catch (error) {\n        console.error('Error sending data to Flask server:', error.response ? error.response.data : error.message);\n        res.status(500).json({\n          message: 'Failed to send data to Flask server',\n          error: error.message\n        });\n      }\n    });\n  } catch (error) {\n    console.error('Error processing video:', error.message);\n    if (!res.headersSent) {\n      res.status(500).json({\n        message: 'Failed to process video',\n        error: error.message\n      });\n    }\n  }\n});\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});","map":{"version":3,"names":["express","require","multer","spawn","path","axios","config","app","PORT","process","env","OPENAI_API_KEY","FLASK_SERVER_URL","console","error","exit","storage","memoryStorage","upload","use","json","post","single","req","res","file","log","status","send","scriptPath","join","__dirname","pythonProcess","stdin","write","buffer","end","output","stdout","on","data","toString","stderr","code","message","response","hashtags","headersSent","listen"],"sources":["C:/Users/hamid/Desktop/TikTok Music Recommender/MusicRecommender/client/src/index.js"],"sourcesContent":["const express = require('express');\nconst multer = require('multer');\nconst { spawn } = require('child_process');\nconst path = require('path');\nconst axios = require('axios');\nrequire('dotenv').config();\n\nconst app = express();\nconst PORT = process.env.PORT || 3001;\nconst OPENAI_API_KEY = process.env.OPENAI_API_KEY;\nconst FLASK_SERVER_URL = 'http://127.0.0.1:5000/recommend-music';\n\nif (!OPENAI_API_KEY) {\n    console.error('OpenAI API key is not set in environment variables.');\n    process.exit(1);\n}\n\n// Configure multer for file uploads\nconst storage = multer.memoryStorage();\nconst upload = multer({ storage: storage });\n\napp.use(express.json());\n\napp.post('/api/upload', upload.single('video'), async (req, res) => {\n    if (!req.file) {\n        console.log('No file uploaded.');\n        return res.status(400).send('No file uploaded.');\n    }\n\n    try {\n        console.log('File received:', req.file);\n\n        // Call the Python script and pass the file buffer\n        const scriptPath = path.join(__dirname, 'analyze.py');\n        const pythonProcess = spawn('python3', [scriptPath]);\n\n        // Send the file buffer to the Python script\n        pythonProcess.stdin.write(req.file.buffer);\n        pythonProcess.stdin.end();\n\n        let output = '';\n        pythonProcess.stdout.on('data', (data) => {\n            output += data.toString();\n        });\n\n        pythonProcess.stderr.on('data', (data) => {\n            console.error(`Error from Python script: ${data.toString()}`);\n        });\n\n        pythonProcess.on('close', async (code) => {\n            if (code !== 0) {\n                console.error('Python script exited with code:', code);\n                return res.status(500).json({ message: 'Failed to analyze video' });\n            }\n            console.log('Python script output:', output);\n\n            try {\n                const response = await axios.post(FLASK_SERVER_URL, { hashtags: output });\n                console.log('Response from Flask server:', response.data);\n                res.json(response.data);\n            } catch (error) {\n                console.error('Error sending data to Flask server:', error.response ? error.response.data : error.message);\n                res.status(500).json({ message: 'Failed to send data to Flask server', error: error.message });\n            }\n        });\n    } catch (error) {\n        console.error('Error processing video:', error.message);\n        if (!res.headersSent) {\n            res.status(500).json({ message: 'Failed to process video', error: error.message });\n        }\n    }\n});\n\napp.listen(PORT, () => {\n    console.log(`Server is running on port ${PORT}`);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}